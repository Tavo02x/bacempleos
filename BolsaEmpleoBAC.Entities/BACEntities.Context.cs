//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BolsaEmpleoBAC.Entities
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BACEntities : DbContext
    {
        public BACEntities()
            : base("name=BACEntities")
        {
            this.Configuration.LazyLoadingEnabled = false;
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Acciones> Acciones { get; set; }
        public virtual DbSet<Agenda_Usuario> Agenda_Usuario { get; set; }
        public virtual DbSet<AreasLaborales> AreasLaborales { get; set; }
        public virtual DbSet<AreasPostulante> AreasPostulante { get; set; }
        public virtual DbSet<Bitacora_Log> Bitacora_Log { get; set; }
        public virtual DbSet<Comentarios> Comentarios { get; set; }
        public virtual DbSet<Configuraciones> Configuraciones { get; set; }
        public virtual DbSet<Discapacidad> Discapacidad { get; set; }
        public virtual DbSet<EmailQueue> EmailQueue { get; set; }
        public virtual DbSet<Entrevistas> Entrevistas { get; set; }
        public virtual DbSet<Entrevistas_Videos> Entrevistas_Videos { get; set; }
        public virtual DbSet<EstadoCivil> EstadoCivil { get; set; }
        public virtual DbSet<EstadoEntrevista> EstadoEntrevista { get; set; }
        public virtual DbSet<EstadoPerfil> EstadoPerfil { get; set; }
        public virtual DbSet<ExperienciaLaboral> ExperienciaLaboral { get; set; }
        public virtual DbSet<FeriaEmpleo> FeriaEmpleo { get; set; }
        public virtual DbSet<FeriaEmpleo_Entrevistadores> FeriaEmpleo_Entrevistadores { get; set; }
        public virtual DbSet<FeriaEmpleo_Puestos> FeriaEmpleo_Puestos { get; set; }
        public virtual DbSet<Habilidades> Habilidades { get; set; }
        public virtual DbSet<Habilidades_Postulante> Habilidades_Postulante { get; set; }
        public virtual DbSet<Idioma> Idioma { get; set; }
        public virtual DbSet<Idiomas_Postulante> Idiomas_Postulante { get; set; }
        public virtual DbSet<MediosInformacion> MediosInformacion { get; set; }
        public virtual DbSet<Monedas> Monedas { get; set; }
        public virtual DbSet<NivelAcademico> NivelAcademico { get; set; }
        public virtual DbSet<Paises> Paises { get; set; }
        public virtual DbSet<Paises_Bac> Paises_Bac { get; set; }
        public virtual DbSet<Paises_Bac_FeriaEmpleo> Paises_Bac_FeriaEmpleo { get; set; }
        public virtual DbSet<Paises_Bac_Usuario> Paises_Bac_Usuario { get; set; }
        public virtual DbSet<PaisPostulante> PaisPostulante { get; set; }
        public virtual DbSet<Postulante> Postulante { get; set; }
        public virtual DbSet<Postulante_Discapacidad> Postulante_Discapacidad { get; set; }
        public virtual DbSet<Postulante_MediosInformacion> Postulante_MediosInformacion { get; set; }
        public virtual DbSet<Preguntas> Preguntas { get; set; }
        public virtual DbSet<Preguntas_Entrevistas> Preguntas_Entrevistas { get; set; }
        public virtual DbSet<PretensionSalarial> PretensionSalarial { get; set; }
        public virtual DbSet<Puesto_TipoJornada> Puesto_TipoJornada { get; set; }
        public virtual DbSet<Puestos> Puestos { get; set; }
        public virtual DbSet<Puestos_Idiomas> Puestos_Idiomas { get; set; }
        public virtual DbSet<Puestos_Paises_BAC> Puestos_Paises_BAC { get; set; }
        public virtual DbSet<Puestos_Postulante> Puestos_Postulante { get; set; }
        public virtual DbSet<PuestosPublicacionTrack> PuestosPublicacionTrack { get; set; }
        public virtual DbSet<ReferenciasLaborales> ReferenciasLaborales { get; set; }
        public virtual DbSet<RequisitosPuesto> RequisitosPuesto { get; set; }
        public virtual DbSet<Rol_Acciones> Rol_Acciones { get; set; }
        public virtual DbSet<Roles> Roles { get; set; }
        public virtual DbSet<Sesiones> Sesiones { get; set; }
        public virtual DbSet<TipoAccion> TipoAccion { get; set; }
        public virtual DbSet<TipoEntrevista> TipoEntrevista { get; set; }
        public virtual DbSet<TipoJornada> TipoJornada { get; set; }
        public virtual DbSet<TipoLicencia> TipoLicencia { get; set; }
        public virtual DbSet<TipoLogin> TipoLogin { get; set; }
        public virtual DbSet<TipoPublicacion> TipoPublicacion { get; set; }
        public virtual DbSet<Titulos> Titulos { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<Usuario_Roles> Usuario_Roles { get; set; }
        public virtual DbSet<Zona1> Zona1 { get; set; }
        public virtual DbSet<Zona2> Zona2 { get; set; }
        public virtual DbSet<Zona3> Zona3 { get; set; }
        public virtual DbSet<Inscripciones> Inscripciones { get; set; }
        public virtual DbSet<vw_acciones> vw_acciones { get; set; }
        public virtual DbSet<vw_accionSegunAsociacionRol> vw_accionSegunAsociacionRol { get; set; }
        public virtual DbSet<vw_areaslaborales> vw_areaslaborales { get; set; }
        public virtual DbSet<vw_Comentarios> vw_Comentarios { get; set; }
        public virtual DbSet<vw_discapacidad> vw_discapacidad { get; set; }
        public virtual DbSet<vw_EntrevistaAplicadasPostulante> vw_EntrevistaAplicadasPostulante { get; set; }
        public virtual DbSet<vw_EntrevistasAgendadas> vw_EntrevistasAgendadas { get; set; }
        public virtual DbSet<vw_EntrevistasRealizadas> vw_EntrevistasRealizadas { get; set; }
        public virtual DbSet<vw_EntrevistasRechazadas> vw_EntrevistasRechazadas { get; set; }
        public virtual DbSet<vw_EntrevistasSolicitadas> vw_EntrevistasSolicitadas { get; set; }
        public virtual DbSet<vw_feriaEmpleo> vw_feriaEmpleo { get; set; }
        public virtual DbSet<vw_feriaEmpleoTodas> vw_feriaEmpleoTodas { get; set; }
        public virtual DbSet<vw_habilidades> vw_habilidades { get; set; }
        public virtual DbSet<vw_idioma> vw_idioma { get; set; }
        public virtual DbSet<vw_jornadalaboral> vw_jornadalaboral { get; set; }
        public virtual DbSet<vw_ListaPostulanteReporte> vw_ListaPostulanteReporte { get; set; }
        public virtual DbSet<vw_Postulante> vw_Postulante { get; set; }
        public virtual DbSet<vw_PostulanteXPuesto> vw_PostulanteXPuesto { get; set; }
        public virtual DbSet<vw_PostulanteXPuestoFeria> vw_PostulanteXPuestoFeria { get; set; }
        public virtual DbSet<vw_PretensionConMoneda> vw_PretensionConMoneda { get; set; }
        public virtual DbSet<vw_pretensionsSalarial> vw_pretensionsSalarial { get; set; }
        public virtual DbSet<vw_Puestos> vw_Puestos { get; set; }
        public virtual DbSet<vw_Puestos_FeriaEmpleo> vw_Puestos_FeriaEmpleo { get; set; }
        public virtual DbSet<vw_PuestosAplicados> vw_PuestosAplicados { get; set; }
        public virtual DbSet<vw_PuestosAplicadosMiPerfil> vw_PuestosAplicadosMiPerfil { get; set; }
        public virtual DbSet<vw_PuestosDisponibles> vw_PuestosDisponibles { get; set; }
        public virtual DbSet<vw_rol> vw_rol { get; set; }
        public virtual DbSet<vw_usuarios> vw_usuarios { get; set; }
        public virtual DbSet<vw_zona1> vw_zona1 { get; set; }
        public virtual DbSet<vw_zona2> vw_zona2 { get; set; }
        public virtual DbSet<vw_zona3> vw_zona3 { get; set; }
    
        [DbFunction("BACEntities", "SplitInts")]
        public virtual IQueryable<SplitInts_Result> SplitInts(string list, string delimiter)
        {
            var listParameter = list != null ?
                new ObjectParameter("List", list) :
                new ObjectParameter("List", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("Delimiter", delimiter) :
                new ObjectParameter("Delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<SplitInts_Result>("[BACEntities].[SplitInts](@List, @Delimiter)", listParameter, delimiterParameter);
        }
    
        public virtual int migrar_postulantes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("migrar_postulantes");
        }
    
        public virtual int migrar_puestos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("migrar_puestos");
        }
    
        public virtual ObjectResult<ReporteAplicantesPorArea_Result> ReporteAplicantesPorArea(Nullable<System.DateTime> fechaInicia, Nullable<System.DateTime> fechaFinal, string paises, string estados, string idiomas, Nullable<int> porcentajeIdioma, string discapacidades, Nullable<bool> sexo, Nullable<int> paisRecidencia)
        {
            var fechaIniciaParameter = fechaInicia.HasValue ?
                new ObjectParameter("fechaInicia", fechaInicia) :
                new ObjectParameter("fechaInicia", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("fechaFinal", fechaFinal) :
                new ObjectParameter("fechaFinal", typeof(System.DateTime));
    
            var paisesParameter = paises != null ?
                new ObjectParameter("paises", paises) :
                new ObjectParameter("paises", typeof(string));
    
            var estadosParameter = estados != null ?
                new ObjectParameter("estados", estados) :
                new ObjectParameter("estados", typeof(string));
    
            var idiomasParameter = idiomas != null ?
                new ObjectParameter("idiomas", idiomas) :
                new ObjectParameter("idiomas", typeof(string));
    
            var porcentajeIdiomaParameter = porcentajeIdioma.HasValue ?
                new ObjectParameter("porcentajeIdioma", porcentajeIdioma) :
                new ObjectParameter("porcentajeIdioma", typeof(int));
    
            var discapacidadesParameter = discapacidades != null ?
                new ObjectParameter("discapacidades", discapacidades) :
                new ObjectParameter("discapacidades", typeof(string));
    
            var sexoParameter = sexo.HasValue ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(bool));
    
            var paisRecidenciaParameter = paisRecidencia.HasValue ?
                new ObjectParameter("paisRecidencia", paisRecidencia) :
                new ObjectParameter("paisRecidencia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteAplicantesPorArea_Result>("ReporteAplicantesPorArea", fechaIniciaParameter, fechaFinalParameter, paisesParameter, estadosParameter, idiomasParameter, porcentajeIdiomaParameter, discapacidadesParameter, sexoParameter, paisRecidenciaParameter);
        }
    
        public virtual ObjectResult<ReporteAplicantesPorDiscapacidad_Result> ReporteAplicantesPorDiscapacidad(Nullable<System.DateTime> fechaInicia, Nullable<System.DateTime> fechaFinal, string paises, string estados, string idiomas, Nullable<int> porcentajeIdioma, string discapacidades, Nullable<bool> sexo, Nullable<int> paisRecidencia)
        {
            var fechaIniciaParameter = fechaInicia.HasValue ?
                new ObjectParameter("fechaInicia", fechaInicia) :
                new ObjectParameter("fechaInicia", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("fechaFinal", fechaFinal) :
                new ObjectParameter("fechaFinal", typeof(System.DateTime));
    
            var paisesParameter = paises != null ?
                new ObjectParameter("paises", paises) :
                new ObjectParameter("paises", typeof(string));
    
            var estadosParameter = estados != null ?
                new ObjectParameter("estados", estados) :
                new ObjectParameter("estados", typeof(string));
    
            var idiomasParameter = idiomas != null ?
                new ObjectParameter("idiomas", idiomas) :
                new ObjectParameter("idiomas", typeof(string));
    
            var porcentajeIdiomaParameter = porcentajeIdioma.HasValue ?
                new ObjectParameter("porcentajeIdioma", porcentajeIdioma) :
                new ObjectParameter("porcentajeIdioma", typeof(int));
    
            var discapacidadesParameter = discapacidades != null ?
                new ObjectParameter("discapacidades", discapacidades) :
                new ObjectParameter("discapacidades", typeof(string));
    
            var sexoParameter = sexo.HasValue ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(bool));
    
            var paisRecidenciaParameter = paisRecidencia.HasValue ?
                new ObjectParameter("paisRecidencia", paisRecidencia) :
                new ObjectParameter("paisRecidencia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteAplicantesPorDiscapacidad_Result>("ReporteAplicantesPorDiscapacidad", fechaIniciaParameter, fechaFinalParameter, paisesParameter, estadosParameter, idiomasParameter, porcentajeIdiomaParameter, discapacidadesParameter, sexoParameter, paisRecidenciaParameter);
        }
    
        public virtual ObjectResult<ReporteAplicantesPorEstado_Result> ReporteAplicantesPorEstado(Nullable<System.DateTime> fechaInicia, Nullable<System.DateTime> fechaFinal, string paises, string estados, string idiomas, Nullable<int> porcentajeIdioma, string discapacidades, Nullable<bool> sexo, Nullable<int> paisRecidencia)
        {
            var fechaIniciaParameter = fechaInicia.HasValue ?
                new ObjectParameter("fechaInicia", fechaInicia) :
                new ObjectParameter("fechaInicia", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("fechaFinal", fechaFinal) :
                new ObjectParameter("fechaFinal", typeof(System.DateTime));
    
            var paisesParameter = paises != null ?
                new ObjectParameter("paises", paises) :
                new ObjectParameter("paises", typeof(string));
    
            var estadosParameter = estados != null ?
                new ObjectParameter("estados", estados) :
                new ObjectParameter("estados", typeof(string));
    
            var idiomasParameter = idiomas != null ?
                new ObjectParameter("idiomas", idiomas) :
                new ObjectParameter("idiomas", typeof(string));
    
            var porcentajeIdiomaParameter = porcentajeIdioma.HasValue ?
                new ObjectParameter("porcentajeIdioma", porcentajeIdioma) :
                new ObjectParameter("porcentajeIdioma", typeof(int));
    
            var discapacidadesParameter = discapacidades != null ?
                new ObjectParameter("discapacidades", discapacidades) :
                new ObjectParameter("discapacidades", typeof(string));
    
            var sexoParameter = sexo.HasValue ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(bool));
    
            var paisRecidenciaParameter = paisRecidencia.HasValue ?
                new ObjectParameter("paisRecidencia", paisRecidencia) :
                new ObjectParameter("paisRecidencia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteAplicantesPorEstado_Result>("ReporteAplicantesPorEstado", fechaIniciaParameter, fechaFinalParameter, paisesParameter, estadosParameter, idiomasParameter, porcentajeIdiomaParameter, discapacidadesParameter, sexoParameter, paisRecidenciaParameter);
        }
    
        public virtual ObjectResult<ReporteAplicantesPorGenero_Result> ReporteAplicantesPorGenero(Nullable<System.DateTime> fechaInicia, Nullable<System.DateTime> fechaFinal, string paises, string estados, string idiomas, Nullable<int> porcentajeIdioma, string discapacidades, Nullable<bool> sexo, Nullable<int> paisRecidencia)
        {
            var fechaIniciaParameter = fechaInicia.HasValue ?
                new ObjectParameter("fechaInicia", fechaInicia) :
                new ObjectParameter("fechaInicia", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("fechaFinal", fechaFinal) :
                new ObjectParameter("fechaFinal", typeof(System.DateTime));
    
            var paisesParameter = paises != null ?
                new ObjectParameter("paises", paises) :
                new ObjectParameter("paises", typeof(string));
    
            var estadosParameter = estados != null ?
                new ObjectParameter("estados", estados) :
                new ObjectParameter("estados", typeof(string));
    
            var idiomasParameter = idiomas != null ?
                new ObjectParameter("idiomas", idiomas) :
                new ObjectParameter("idiomas", typeof(string));
    
            var porcentajeIdiomaParameter = porcentajeIdioma.HasValue ?
                new ObjectParameter("porcentajeIdioma", porcentajeIdioma) :
                new ObjectParameter("porcentajeIdioma", typeof(int));
    
            var discapacidadesParameter = discapacidades != null ?
                new ObjectParameter("discapacidades", discapacidades) :
                new ObjectParameter("discapacidades", typeof(string));
    
            var sexoParameter = sexo.HasValue ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(bool));
    
            var paisRecidenciaParameter = paisRecidencia.HasValue ?
                new ObjectParameter("paisRecidencia", paisRecidencia) :
                new ObjectParameter("paisRecidencia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteAplicantesPorGenero_Result>("ReporteAplicantesPorGenero", fechaIniciaParameter, fechaFinalParameter, paisesParameter, estadosParameter, idiomasParameter, porcentajeIdiomaParameter, discapacidadesParameter, sexoParameter, paisRecidenciaParameter);
        }
    
        public virtual ObjectResult<ReporteAplicantesPorIdioma_Result> ReporteAplicantesPorIdioma(Nullable<System.DateTime> fechaInicia, Nullable<System.DateTime> fechaFinal, string paises, string estados, string idiomas, Nullable<int> porcentajeIdioma, string discapacidades, Nullable<bool> sexo, Nullable<int> paisRecidencia)
        {
            var fechaIniciaParameter = fechaInicia.HasValue ?
                new ObjectParameter("fechaInicia", fechaInicia) :
                new ObjectParameter("fechaInicia", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("fechaFinal", fechaFinal) :
                new ObjectParameter("fechaFinal", typeof(System.DateTime));
    
            var paisesParameter = paises != null ?
                new ObjectParameter("paises", paises) :
                new ObjectParameter("paises", typeof(string));
    
            var estadosParameter = estados != null ?
                new ObjectParameter("estados", estados) :
                new ObjectParameter("estados", typeof(string));
    
            var idiomasParameter = idiomas != null ?
                new ObjectParameter("idiomas", idiomas) :
                new ObjectParameter("idiomas", typeof(string));
    
            var porcentajeIdiomaParameter = porcentajeIdioma.HasValue ?
                new ObjectParameter("porcentajeIdioma", porcentajeIdioma) :
                new ObjectParameter("porcentajeIdioma", typeof(int));
    
            var discapacidadesParameter = discapacidades != null ?
                new ObjectParameter("discapacidades", discapacidades) :
                new ObjectParameter("discapacidades", typeof(string));
    
            var sexoParameter = sexo.HasValue ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(bool));
    
            var paisRecidenciaParameter = paisRecidencia.HasValue ?
                new ObjectParameter("paisRecidencia", paisRecidencia) :
                new ObjectParameter("paisRecidencia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteAplicantesPorIdioma_Result>("ReporteAplicantesPorIdioma", fechaIniciaParameter, fechaFinalParameter, paisesParameter, estadosParameter, idiomasParameter, porcentajeIdiomaParameter, discapacidadesParameter, sexoParameter, paisRecidenciaParameter);
        }
    
        public virtual ObjectResult<ReporteAplicantesPorPuesto_Result> ReporteAplicantesPorPuesto(Nullable<int> idUsuario, Nullable<int> idPais)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var idPaisParameter = idPais.HasValue ?
                new ObjectParameter("IdPais", idPais) :
                new ObjectParameter("IdPais", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteAplicantesPorPuesto_Result>("ReporteAplicantesPorPuesto", idUsuarioParameter, idPaisParameter);
        }
    
        public virtual ObjectResult<ReporteInteresadosPorPais_Result> ReporteInteresadosPorPais(Nullable<System.DateTime> fechaInicia, Nullable<System.DateTime> fechaFinal, string paises, string estados, string idiomas, Nullable<int> porcentajeIdioma, string discapacidades, Nullable<bool> sexo, Nullable<int> paisRecidencia)
        {
            var fechaIniciaParameter = fechaInicia.HasValue ?
                new ObjectParameter("fechaInicia", fechaInicia) :
                new ObjectParameter("fechaInicia", typeof(System.DateTime));
    
            var fechaFinalParameter = fechaFinal.HasValue ?
                new ObjectParameter("fechaFinal", fechaFinal) :
                new ObjectParameter("fechaFinal", typeof(System.DateTime));
    
            var paisesParameter = paises != null ?
                new ObjectParameter("paises", paises) :
                new ObjectParameter("paises", typeof(string));
    
            var estadosParameter = estados != null ?
                new ObjectParameter("estados", estados) :
                new ObjectParameter("estados", typeof(string));
    
            var idiomasParameter = idiomas != null ?
                new ObjectParameter("idiomas", idiomas) :
                new ObjectParameter("idiomas", typeof(string));
    
            var porcentajeIdiomaParameter = porcentajeIdioma.HasValue ?
                new ObjectParameter("porcentajeIdioma", porcentajeIdioma) :
                new ObjectParameter("porcentajeIdioma", typeof(int));
    
            var discapacidadesParameter = discapacidades != null ?
                new ObjectParameter("discapacidades", discapacidades) :
                new ObjectParameter("discapacidades", typeof(string));
    
            var sexoParameter = sexo.HasValue ?
                new ObjectParameter("sexo", sexo) :
                new ObjectParameter("sexo", typeof(bool));
    
            var paisRecidenciaParameter = paisRecidencia.HasValue ?
                new ObjectParameter("paisRecidencia", paisRecidencia) :
                new ObjectParameter("paisRecidencia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReporteInteresadosPorPais_Result>("ReporteInteresadosPorPais", fechaIniciaParameter, fechaFinalParameter, paisesParameter, estadosParameter, idiomasParameter, porcentajeIdiomaParameter, discapacidadesParameter, sexoParameter, paisRecidenciaParameter);
        }
    
        public virtual ObjectResult<ReportePuestoActivos_Result> ReportePuestoActivos(Nullable<int> idUsuario, Nullable<int> idPais)
        {
            var idUsuarioParameter = idUsuario.HasValue ?
                new ObjectParameter("IdUsuario", idUsuario) :
                new ObjectParameter("IdUsuario", typeof(int));
    
            var idPaisParameter = idPais.HasValue ?
                new ObjectParameter("IdPais", idPais) :
                new ObjectParameter("IdPais", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReportePuestoActivos_Result>("ReportePuestoActivos", idUsuarioParameter, idPaisParameter);
        }
    }
}
